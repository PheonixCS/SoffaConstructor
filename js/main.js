
$(document).ready(function(){
    $('#board').css({
        'height':document.documentElement.clientHeight
    });
    window.addEventListener('resize', function(event) {
        $('#board').css({
            'height':document.documentElement.clientHeight
        });
    }, true);

    $(".modul").mouseover(function(e){ 
        $(this).css({
            'border-color':'red',
        });
    });
    $(".modul").mouseout(function(e){ 
        $(this).css({
            'border-color':'black',
        });
    });
    
    
    /* БЛОК ПЕРЕМЕННЫЕ*/
    // глобальные переменные для вычситывания индекса добавляемого модуля
    numberIdObjecy = 0;
    idObject = "appended-modul" + numberIdObjecy;

    // это используется чтобы мы не выходили за границы рабочей области
    // получаем глобальные координаты верхнего левого угла области рисования
    $updateSize = function(){
        let objContainer = document.getElementById('container');
        rectcont = objContainer.getBoundingClientRect();
        $containerRX = rectcont.right-$('#menu').width();
        return $containerRX;
    };

    $idFinedObjOLD = "appended-modul0";
    // коллекции объектов

    // коллекция скомпонованных объектов (главная ветка)
    const groupMain = new Map();
    // коллекция скомпонованных объектов (побочная ветка)
    const subMain = new Map();
    // массив размещенных объектов
    var appendedObj = new Map();


    //arr.set('key5','value5');
    //console.log(arr);


    /* БЛОК ПЕРЕМЕННЫЕ*/

    //// вспомогательные функции /////
    /// создаем html код модуля
    $creatModul = function(id,$number){
        if ($number == 1){

            modul = '<svg  id = "'+id+'" class = "appended-modul" width="101" height="303" viewBox="0 0 101 303" fill="none" xmlns="http://www.w3.org/2000/svg">'+
            '<mask id="mask0_47_302" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="101" height="303">'+
            '<path d="M0 283.52L0 18.75C0 13.78 1.98001 9.00999 5.49001 5.48999C9.01001 1.96999 13.78 0 18.75 0H82.01C86.98 0 91.75 1.97999 95.27 5.48999C98.79 9.00999 100.76 13.78 100.76 18.75L100.76 283.52C100.76 288.49 98.78 293.26 95.27 296.78C91.75 300.3 86.98 302.27 82.01 302.27H18.75C13.78 302.27 9.01001 300.29 5.49001 296.78C1.97001 293.26 0 288.49 0 283.52Z" fill="white"/>'+
            '</mask>'+
            '<g mask="url(#mask0_47_302)">'+
            '<path d="M0 0.119995L0 302.27H100.49L100.49 0.119995H0Z" fill="#A6A5A5"/>'+
            '</g>'+
            '<mask id="mask1_47_302" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="101" height="303">'+
            '<path d="M0 283.51L0 18.77C0 13.8 1.97001 9.03001 5.48001 5.51001C8.99001 1.99001 13.74 0.0200195 18.7 0.0200195H81.8C86.76 0.0200195 91.52 2.00001 95.02 5.51001C98.53 9.03001 100.5 13.79 100.5 18.77L100.5 283.51C100.5 288.48 98.53 293.25 95.02 296.77C91.51 300.29 86.76 302.26 81.8 302.26H18.7C13.74 302.26 8.98001 300.28 5.48001 296.77C1.97001 293.25 0 288.49 0 283.51Z" fill="white"/>'+
            '</mask>'+
            '<g mask="url(#mask1_47_302)">'+
            '<path d="M0 283.51L0 18.77C0 13.8 1.97001 9.03001 5.48001 5.51001C8.99001 1.99001 13.74 0.0200195 18.7 0.0200195H81.8C86.76 0.0200195 91.52 2.00001 95.02 5.51001C98.53 9.03001 100.5 13.79 100.5 18.77L100.5 283.51C100.5 288.48 98.53 293.25 95.02 296.77C91.51 300.29 86.76 302.26 81.8 302.26H18.7C13.74 302.26 8.98001 300.28 5.48001 296.77C1.97001 293.25 0 288.49 0 283.51Z" stroke="black" stroke-width="8.99"/>'+
            '</g>'+
            '<path d="M59.4098 153.86V152.08C59.4098 150.29 59.1198 148.98 58.5498 148.15C57.9698 147.32 57.1098 146.9 55.9398 146.9C54.7698 146.9 53.9598 147.32 53.4498 148.16C52.9398 149 52.6898 150.45 52.6898 152.5V153.85H59.4098V153.86ZM48.3498 153.86V151.78C48.3498 148.52 49.0098 146.01 50.3298 144.23C51.6498 142.45 53.5198 141.57 55.9398 141.57C61.1498 141.57 63.7498 145.01 63.7498 151.89V159.17H38.7598V143.39H43.1298V153.88H48.3398L48.3498 153.86Z" fill="black"/>'+
            '<path d="M91.2199 177.37V179.04H80.4799C79.5899 179.04 78.7399 179.01 77.9499 178.96C78.0899 179.1 78.2499 179.27 78.3999 179.44C78.5599 179.62 79.2299 180.44 80.4099 181.89L79.2299 182.8L76.1399 178.81V177.37H91.2099H91.2199Z" fill="black"/>'+
            '<path d="M91.2199 165.31V166.98H80.4799C79.5899 166.98 78.7399 166.95 77.9499 166.9C78.0899 167.04 78.2499 167.21 78.3999 167.38C78.5599 167.56 79.2299 168.38 80.4099 169.83L79.2299 170.74L76.1399 166.75V165.31H91.2099H91.2199Z" fill="black"/>'+
            '<path d="M83.6699 157.83C85.8599 157.83 87.4599 157.57 88.4599 157.06C89.4599 156.54 89.9599 155.72 89.9599 154.6C89.9599 153.48 89.4499 152.63 88.4399 152.12C87.4299 151.61 85.8399 151.35 83.6699 151.35C81.4999 151.35 79.9199 151.61 78.9099 152.12C77.8999 152.63 77.3999 153.46 77.3999 154.6C77.3999 155.74 77.8999 156.55 78.8899 157.06C79.8799 157.58 81.4699 157.83 83.6699 157.83ZM83.6699 149.59C86.2699 149.59 88.2199 150 89.4999 150.82C90.7799 151.64 91.4299 152.9 91.4299 154.59C91.4299 156.28 90.7699 157.44 89.4599 158.29C88.1399 159.14 86.2199 159.56 83.6699 159.56C81.1199 159.56 79.0999 159.15 77.8299 158.33C76.5599 157.51 75.9199 156.27 75.9199 154.59C75.9199 152.91 76.5799 151.71 77.9099 150.86C79.2399 150.01 81.1599 149.59 83.6699 149.59Z" fill="black"/>'+
            '<path d="M91.43 136.75C91.43 138.38 90.93 139.65 89.92 140.55C88.91 141.45 87.49 141.89 85.65 141.89C83.81 141.89 82.3 141.44 81.27 140.53C80.24 139.62 79.72 138.32 79.72 136.64C79.72 136.1 79.78 135.56 79.9 135.01C80.02 134.47 80.15 134.04 80.31 133.73L81.76 134.26C81.61 134.64 81.48 135.05 81.38 135.5C81.28 135.95 81.23 136.34 81.23 136.68C81.23 138.97 82.69 140.12 85.62 140.12C87.01 140.12 88.07 139.84 88.82 139.28C89.56 138.72 89.93 137.89 89.93 136.79C89.93 135.85 89.73 134.88 89.32 133.9H90.83C91.22 134.66 91.42 135.61 91.42 136.75H91.43Z" fill="black"/>'+
            '<path d="M89.5699 125.35L88.6099 125.03L87.3899 124.59L79.9399 121.53V119.36H91.2099V120.87H81.8899L82.4899 121.08L84.0699 121.68L91.2199 124.6V126.03L84.0499 128.95C83.1299 129.31 82.4099 129.56 81.8999 129.7H91.2199V131.22H79.95V129.13L87.1099 126.17C87.8699 125.87 88.6899 125.6 89.5699 125.36V125.35Z" fill="black"/>'+
            '<path d="M33.1698 281.7C33.1698 282.66 32.8998 283.45 32.3598 284.06C31.8198 284.67 31.0598 285.08 30.0698 285.28V285.36C31.2798 285.51 32.1798 285.9 32.7598 286.52C33.3398 287.14 33.6398 287.95 33.6398 288.95C33.6398 290.39 33.1398 291.49 32.1498 292.27C31.1498 293.04 29.7398 293.43 27.8998 293.43C27.0998 293.43 26.3698 293.37 25.7098 293.25C25.0498 293.13 24.3998 292.92 23.7798 292.62V290.99C24.4298 291.31 25.1298 291.56 25.8698 291.73C26.6098 291.9 27.3098 291.98 27.9698 291.98C30.5698 291.98 31.8798 290.96 31.8798 288.92C31.8798 287.09 30.4398 286.18 27.5698 286.18H26.0898V284.71H27.5998C28.7798 284.71 29.7098 284.45 30.3898 283.93C31.0798 283.41 31.4198 282.69 31.4198 281.77C31.4198 281.04 31.1698 280.46 30.6598 280.04C30.1498 279.62 29.4698 279.41 28.5998 279.41C27.9398 279.41 27.3198 279.5 26.7298 279.68C26.1498 279.86 25.4798 280.19 24.7298 280.67L23.8598 279.52C24.4798 279.03 25.1898 278.65 25.9998 278.37C26.8098 278.09 27.6598 277.95 28.5498 277.95C30.0098 277.95 31.1498 278.28 31.9598 278.95C32.7698 279.62 33.1798 280.54 33.1798 281.7H33.1698Z" fill="black"/>'+
            '<path d="M40.61 284.02C42.2 284.02 43.45 284.41 44.36 285.2C45.27 285.99 45.73 287.06 45.73 288.43C45.73 289.99 45.23 291.21 44.24 292.1C43.25 292.99 41.88 293.43 40.13 293.43C38.38 293.43 37.14 293.16 36.24 292.62V290.97C36.72 291.28 37.32 291.52 38.03 291.7C38.74 291.88 39.45 291.96 40.14 291.96C41.35 291.96 42.29 291.67 42.96 291.1C43.63 290.53 43.97 289.7 43.97 288.63C43.97 286.53 42.68 285.48 40.1 285.48C39.45 285.48 38.57 285.58 37.48 285.78L36.59 285.21L37.16 278.16H44.65V279.74H38.62L38.24 284.27C39.03 284.11 39.82 284.03 40.6 284.03L40.61 284.02Z" fill="black"/>'+
            '<path d="M58.7399 293.43C57.1099 293.43 55.8398 292.93 54.9398 291.92C54.0398 290.91 53.5999 289.49 53.5999 287.65C53.5999 285.81 54.0499 284.3 54.9599 283.27C55.8699 282.24 57.1699 281.72 58.8499 281.72C59.3899 281.72 59.9299 281.78 60.4799 281.9C61.0199 282.02 61.4499 282.15 61.7599 282.31L61.2299 283.76C60.8499 283.61 60.4399 283.48 59.9899 283.38C59.5399 283.28 59.1498 283.23 58.8098 283.23C56.5198 283.23 55.3699 284.69 55.3699 287.62C55.3699 289.01 55.6499 290.07 56.2099 290.82C56.7699 291.56 57.5999 291.93 58.6999 291.93C59.6399 291.93 60.6099 291.73 61.5899 291.32V292.83C60.8299 293.22 59.8799 293.42 58.7399 293.42V293.43Z" fill="black"/>'+
            '<path d="M70.1298 291.57L70.4498 290.61L70.8898 289.39L73.9498 281.94H76.1198V293.21H74.6098V283.89L74.3998 284.49L73.7998 286.07L70.8798 293.22H69.4498L66.5298 286.05C66.1698 285.13 65.9198 284.41 65.7798 283.9V293.22H64.2598V281.95H66.3498L69.3098 289.11C69.6098 289.87 69.8798 290.69 70.1198 291.57H70.1298Z" fill="black"/>'+
            '</svg>';

            //modul  = '<div id = "'+id+'" class = "appended-modul modul B"><div class="name modul-nameAppendB B-name">Б</div></div>';
            return modul;
        }
        if ($number == 2){
            modul = '<svg id = "'+id+'" class = "appended-modul" width="101" height="203" viewBox="0 0 101 203" fill="none" xmlns="http://www.w3.org/2000/svg">'+
            '<mask id="mask0_47_240" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="101" height="203">'+
            '<path d="M0 183.74L0 18.97C0 14 1.98001 9.22999 5.49001 5.70999C9.01001 2.18999 13.78 0.219971 18.75 0.219971H82.01C86.98 0.219971 91.75 2.19999 95.27 5.70999C98.79 9.21999 100.76 14 100.76 18.97L100.76 183.74C100.76 188.71 98.78 193.48 95.27 197C91.76 200.52 86.98 202.49 82.01 202.49H18.75C13.78 202.49 9.01001 200.51 5.49001 197C1.97001 193.48 0 188.71 0 183.74Z" fill="white"/>'+
            '</mask>'+
            '<g mask="url(#mask0_47_240)">'+
            '<path d="M0 0.149994L0 202.49H100.49L100.49 0.149994H0Z" fill="#A6A5A5"/>'+
            '</g>'+
            '<mask id="mask1_47_240" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="101" height="203">'+
            '<path d="M0 183.72L0 18.77C0 13.79 1.97001 9.02 5.48001 5.5C8.99001 1.98 13.74 0 18.7 0H81.8C86.76 0 91.52 1.98 95.02 5.5C98.52 9.02 100.5 13.79 100.5 18.77L100.5 183.72C100.5 188.7 98.53 193.47 95.02 196.99C91.51 200.51 86.76 202.49 81.8 202.49H18.7C13.74 202.49 8.98001 200.51 5.48001 196.99C1.97001 193.47 0 188.7 0 183.72Z" fill="white"/>'+
            '</mask>'+
            '<g mask="url(#mask1_47_240)">'+
            '<path d="M0 183.72L0 18.77C0 13.79 1.97001 9.02 5.48001 5.5C8.99001 1.98 13.74 0 18.7 0H81.8C86.76 0 91.52 1.98 95.02 5.5C98.52 9.02 100.5 13.79 100.5 18.77L100.5 183.72C100.5 188.7 98.53 193.47 95.02 196.99C91.51 200.51 86.76 202.49 81.8 202.49H18.7C13.74 202.49 8.98001 200.51 5.48001 196.99C1.97001 193.47 0 188.7 0 183.72Z" stroke="black" stroke-width="8.99"/>'+
            '</g>'+
            '<path d="M59.41 120.59V118.81C59.41 117.02 59.12 115.71 58.55 114.88C57.97 114.05 57.11 113.63 55.94 113.63C54.77 113.63 53.96 114.05 53.45 114.89C52.94 115.73 52.69 117.18 52.69 119.23V120.58H59.41V120.59ZM48.35 120.59V118.51C48.35 115.25 49.01 112.74 50.33 110.96C51.65 109.18 53.52 108.3 55.94 108.3C61.15 108.3 63.75 111.74 63.75 118.62V125.9H38.76V110.12H43.13V120.61H48.34L48.35 120.59Z" fill="black"/>'+
            '<path d="M63.75 92.97L44.15 98.9901V99.14C48.14 98.92 50.8 98.8201 52.13 98.8201H63.75V103.55H38.76V96.34L57.87 90.4301V90.33L38.76 84.06V76.8501H63.75V81.79H51.92C51.36 81.79 50.72 81.79 49.99 81.76C49.26 81.74 47.32 81.67 44.18 81.53V81.6801L63.75 88.12V92.97Z" fill="black"/>'+
            '<path d="M77.36 122.94C77.36 123.8 77.57 124.47 77.98 124.96C78.39 125.45 78.94 125.69 79.63 125.69C80.26 125.69 80.8 125.49 81.26 125.08C81.72 124.67 82.17 123.93 82.62 122.83C82.21 121.85 81.76 121.15 81.29 120.74C80.82 120.33 80.26 120.13 79.63 120.13C78.94 120.13 78.38 120.38 77.98 120.88C77.58 121.38 77.37 122.06 77.37 122.94H77.36ZM87.45 126.18C88.27 126.18 88.92 125.89 89.38 125.32C89.84 124.75 90.07 123.94 90.07 122.9C90.07 121.86 89.83 121.08 89.35 120.51C88.87 119.94 88.21 119.65 87.37 119.65C86.7 119.65 86.11 119.92 85.59 120.45C85.07 120.99 84.57 121.92 84.08 123.25C84.52 124.27 85.01 125.02 85.54 125.48C86.07 125.94 86.71 126.17 87.45 126.17V126.18ZM75.97 122.92C75.97 121.55 76.29 120.46 76.93 119.65C77.57 118.85 78.45 118.44 79.58 118.44C80.32 118.44 81 118.67 81.61 119.13C82.22 119.59 82.78 120.33 83.28 121.34C83.86 120.12 84.48 119.25 85.12 118.73C85.76 118.21 86.51 117.96 87.35 117.96C88.6 117.96 89.6 118.4 90.34 119.27C91.09 120.14 91.46 121.34 91.46 122.86C91.46 124.47 91.11 125.7 90.4 126.57C89.7 127.44 88.7 127.87 87.41 127.87C85.69 127.87 84.34 126.82 83.38 124.72C82.84 125.67 82.27 126.35 81.64 126.76C81.02 127.17 80.32 127.38 79.55 127.38C78.46 127.38 77.59 126.98 76.94 126.17C76.29 125.36 75.97 124.28 75.97 122.93V122.92Z" fill="black"/>'+
            '<path d="M83.6899 114.09C85.8799 114.09 87.4799 113.83 88.4799 113.32C89.4799 112.8 89.9799 111.98 89.9799 110.86C89.9799 109.74 89.4699 108.89 88.4599 108.38C87.4499 107.87 85.8599 107.61 83.6899 107.61C81.5199 107.61 79.9399 107.87 78.9299 108.38C77.9199 108.89 77.4199 109.72 77.4199 110.86C77.4199 112 77.9199 112.81 78.9099 113.32C79.8999 113.84 81.4899 114.09 83.6899 114.09ZM83.6899 105.85C86.2899 105.85 88.2399 106.26 89.5199 107.08C90.7999 107.9 91.45 109.16 91.45 110.85C91.45 112.54 90.7899 113.7 89.4799 114.55C88.1599 115.4 86.2399 115.82 83.6899 115.82C81.1399 115.82 79.1199 115.41 77.8499 114.59C76.5799 113.77 75.9399 112.53 75.9399 110.85C75.9399 109.17 76.5999 107.97 77.9299 107.12C79.2599 106.27 81.1799 105.85 83.6899 105.85Z" fill="black"/>'+
            '<path d="M91.45 92.9999C91.45 94.6299 90.95 95.8999 89.94 96.7999C88.93 97.6999 87.51 98.1399 85.67 98.1399C83.83 98.1399 82.32 97.6899 81.29 96.7799C80.26 95.8699 79.74 94.5699 79.74 92.8899C79.74 92.3499 79.8 91.8099 79.92 91.2599C80.04 90.7199 80.17 90.2899 80.33 89.9799L81.78 90.5099C81.63 90.8899 81.5 91.2999 81.4 91.7499C81.3 92.1999 81.25 92.5899 81.25 92.9299C81.25 95.2199 82.71 96.3699 85.64 96.3699C87.03 96.3699 88.09 96.0899 88.84 95.5299C89.58 94.9699 89.95 94.1399 89.95 93.0399C89.95 92.0999 89.75 91.1299 89.34 90.1499H90.85C91.24 90.9099 91.44 91.8599 91.44 92.9999H91.45Z" fill="black"/>'+
            '<path d="M89.59 81.6102L88.63 81.2902L87.41 80.8502L79.96 77.7902V75.6202H91.23V77.1302H81.91L82.51 77.3402L84.09 77.9402L91.24 80.8602V82.2902L84.07 85.2102C83.15 85.5702 82.43 85.8202 81.92 85.9602H91.24V87.4802H79.97V85.3902L87.13 82.4302C87.89 82.1302 88.71 81.8602 89.59 81.6202V81.6102Z" fill="black"/>'+
            '<path d="M33.17 181.73C33.17 182.69 32.9 183.48 32.36 184.09C31.82 184.7 31.06 185.11 30.07 185.31V185.39C31.28 185.54 32.18 185.93 32.76 186.55C33.34 187.17 33.64 187.98 33.64 188.98C33.64 190.42 33.14 191.52 32.15 192.3C31.15 193.07 29.74 193.46 27.9 193.46C27.1 193.46 26.37 193.4 25.71 193.28C25.05 193.16 24.4 192.95 23.78 192.65V191.02C24.43 191.34 25.13 191.59 25.87 191.76C26.61 191.93 27.31 192.01 27.97 192.01C30.57 192.01 31.88 190.99 31.88 188.95C31.88 187.12 30.44 186.21 27.57 186.21H26.09V184.74H27.6C28.78 184.74 29.71 184.48 30.39 183.96C31.08 183.44 31.42 182.72 31.42 181.8C31.42 181.07 31.17 180.49 30.66 180.07C30.15 179.65 29.47 179.44 28.6 179.44C27.94 179.44 27.32 179.53 26.73 179.71C26.15 179.89 25.48 180.22 24.73 180.7L23.86 179.55C24.48 179.06 25.19 178.68 26 178.4C26.81 178.12 27.66 177.98 28.55 177.98C30.01 177.98 31.15 178.31 31.96 178.98C32.77 179.65 33.18 180.57 33.18 181.73H33.17Z" fill="black"/>'+
            '<path d="M40.61 184.05C42.2 184.05 43.45 184.44 44.36 185.23C45.27 186.02 45.73 187.09 45.73 188.46C45.73 190.02 45.23 191.24 44.24 192.13C43.25 193.02 41.88 193.46 40.13 193.46C38.38 193.46 37.14 193.19 36.24 192.65V191C36.72 191.31 37.32 191.55 38.03 191.73C38.74 191.91 39.45 191.99 40.14 191.99C41.35 191.99 42.29 191.7 42.96 191.13C43.63 190.56 43.97 189.73 43.97 188.66C43.97 186.56 42.68 185.51 40.1 185.51C39.45 185.51 38.57 185.61 37.48 185.81L36.59 185.24L37.16 178.19H44.65V179.77H38.62L38.24 184.3C39.03 184.14 39.82 184.06 40.6 184.06L40.61 184.05Z" fill="black"/>'+
            '<path d="M58.7401 193.46C57.1101 193.46 55.8401 192.96 54.9401 191.95C54.0401 190.94 53.6001 189.52 53.6001 187.68C53.6001 185.84 54.0501 184.33 54.9601 183.3C55.8701 182.27 57.1701 181.75 58.8501 181.75C59.3901 181.75 59.9301 181.81 60.4801 181.93C61.0201 182.05 61.4501 182.18 61.7601 182.34L61.2301 183.79C60.8501 183.64 60.4401 183.51 59.9901 183.41C59.5401 183.31 59.1501 183.26 58.8101 183.26C56.5201 183.26 55.3701 184.72 55.3701 187.65C55.3701 189.04 55.6501 190.1 56.2101 190.85C56.7701 191.59 57.6001 191.96 58.7001 191.96C59.6401 191.96 60.6101 191.76 61.5901 191.35V192.86C60.8301 193.25 59.8801 193.45 58.7401 193.45V193.46Z" fill="black"/>'+
            '<path d="M70.13 191.6L70.45 190.64L70.89 189.42L73.95 181.97H76.12V193.24H74.61V183.92L74.4 184.52L73.8 186.1L70.88 193.25H69.45L66.53 186.08C66.17 185.16 65.92 184.44 65.78 183.93V193.25H64.26V181.98H66.35L69.31 189.14C69.61 189.9 69.88 190.72 70.12 191.6H70.13Z" fill="black"/>'+
            '</svg>';
            //modul = '<div id = "'+id+'" class = "appended-modul modul BM"><div class="name modul-nameAppendBM BM-name">БМ</div></div>';
            return modul;
        }
        if ($number == 3){
            modul = '<svg id = "'+id+'" class = "appended-modul" width="203" height="303" viewBox="0 0 203 303" fill="none" xmlns="http://www.w3.org/2000/svg">'+
            '<mask id="mask0_48_386" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="203" height="303">'+
            '<path d="M0 283.49L0 18.89C0 13.92 1.98 9.15004 5.49 5.63004C9 2.11004 13.78 0.140045 18.75 0.140045H183.52C188.49 0.140045 193.26 2.12004 196.78 5.63004C200.3 9.15004 202.27 13.92 202.27 18.89L202.27 283.49C202.27 288.46 200.29 293.23 196.78 296.75C193.26 300.27 188.49 302.24 183.52 302.24H18.75C13.78 302.24 9.01 300.26 5.49 296.75C1.97 293.23 0 288.46 0 283.49Z" fill="white"/>'+
            '</mask>'+
            '<g mask="url(#mask0_48_386)">'+
            '<path d="M0 0.0900269L0 302.24H202.34L202.34 0.0900269H0Z" fill="#DAD9D9"/>'+
            '</g>'+
            '<mask id="mask1_48_386" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="203" height="303">'+
            '<path d="M0 283.48L0 18.75C0 13.77 1.98 8.99999 5.5 5.48999C9.02 1.96999 13.79 0 18.77 0H183.73C188.71 0 193.48 1.97999 197 5.48999C200.52 9.00999 202.5 13.78 202.5 18.75L202.5 283.48C202.5 288.46 200.52 293.23 197 296.74C193.48 300.26 188.71 302.23 183.73 302.23H18.77C13.79 302.23 9.02 300.25 5.5 296.74C1.98 293.22 0 288.45 0 283.48Z" fill="white"/>'+
            '</mask>'+
            '<g mask="url(#mask1_48_386)">'+
            '<path d="M0 283.48L0 18.75C0 13.77 1.98 8.99999 5.5 5.48999C9.02 1.96999 13.79 0 18.77 0H183.73C188.71 0 193.48 1.97999 197 5.48999C200.52 9.00999 202.5 13.78 202.5 18.75L202.5 283.48C202.5 288.46 200.52 293.23 197 296.74C193.48 300.26 188.71 302.23 183.73 302.23H18.77C13.79 302.23 9.02 300.25 5.5 296.74C1.98 293.22 0 288.45 0 283.48Z" stroke="black" stroke-width="9.01"/>'+
            '</g>'+
            '<path d="M93.8199 148.59C93.8199 150.58 94.5699 152.12 96.0699 153.22C97.5699 154.31 99.6599 154.86 102.33 154.86C107.9 154.86 110.69 152.77 110.69 148.59C110.69 146.84 110.25 144.71 109.37 142.22H113.81C114.66 144.27 115.09 146.56 115.09 149.09C115.09 152.72 113.99 155.5 111.78 157.43C109.58 159.35 106.41 160.32 102.29 160.32C99.6899 160.32 97.4199 159.85 95.4599 158.9C93.5099 157.95 92.0099 156.6 90.9699 154.83C89.9299 153.06 89.4099 150.98 89.4099 148.6C89.4099 146.22 89.9999 143.74 91.1699 141.29L95.4799 143C95.0399 143.93 94.6499 144.87 94.3199 145.82C93.9899 146.76 93.8199 147.69 93.8199 148.6V148.59Z" fill="black"/>'+
            '<path d="M193.26 177.43V179.1H182.52C181.63 179.1 180.78 179.07 179.99 179.02C180.13 179.16 180.29 179.33 180.44 179.5C180.6 179.68 181.27 180.5 182.45 181.95L181.27 182.86L178.18 178.87V177.43H193.25H193.26Z" fill="black"/>'+
            '<path d="M193.26 165.37V167.04H182.52C181.63 167.04 180.78 167.01 179.99 166.96C180.13 167.1 180.29 167.27 180.44 167.44C180.6 167.62 181.27 168.44 182.45 169.89L181.27 170.8L178.18 166.81V165.37H193.25H193.26Z" fill="black"/>'+
            '<path d="M185.71 157.89C187.9 157.89 189.5 157.63 190.5 157.12C191.5 156.61 192 155.78 192 154.66C192 153.54 191.49 152.69 190.48 152.18C189.47 151.67 187.88 151.41 185.71 151.41C183.54 151.41 181.96 151.67 180.95 152.18C179.94 152.69 179.44 153.52 179.44 154.66C179.44 155.8 179.94 156.61 180.93 157.12C181.92 157.64 183.51 157.89 185.71 157.89ZM185.71 149.65C188.31 149.65 190.26 150.06 191.54 150.88C192.82 151.7 193.47 152.96 193.47 154.65C193.47 156.34 192.81 157.5 191.5 158.35C190.18 159.2 188.26 159.62 185.71 159.62C183.16 159.62 181.14 159.21 179.87 158.39C178.6 157.57 177.96 156.33 177.96 154.65C177.96 152.97 178.62 151.77 179.95 150.92C181.28 150.07 183.2 149.65 185.71 149.65Z" fill="black"/>'+
            '<path d="M193.47 136.81C193.47 138.44 192.97 139.71 191.96 140.61C190.95 141.51 189.53 141.95 187.69 141.95C185.85 141.95 184.34 141.5 183.31 140.59C182.28 139.68 181.76 138.38 181.76 136.7C181.76 136.16 181.82 135.62 181.94 135.07C182.06 134.53 182.19 134.1 182.35 133.79L183.8 134.32C183.65 134.7 183.52 135.11 183.42 135.56C183.32 136.01 183.27 136.4 183.27 136.74C183.27 139.03 184.73 140.18 187.66 140.18C189.05 140.18 190.11 139.9 190.86 139.34C191.6 138.78 191.97 137.95 191.97 136.85C191.97 135.91 191.77 134.94 191.36 133.96H192.87C193.26 134.72 193.46 135.67 193.46 136.81H193.47Z" fill="black"/>'+
            '<path d="M191.61 125.41L190.65 125.09L189.43 124.65L181.98 121.59V119.42H193.25V120.93H183.93L184.53 121.14L186.11 121.74L193.26 124.66V126.09L186.09 129.01C185.17 129.37 184.45 129.62 183.94 129.76H193.26V131.28H181.99V129.19L189.15 126.23C189.91 125.93 190.73 125.66 191.61 125.42V125.41Z" fill="black"/>'+
            '<path d="M79.5501 278.96C78.6901 278.96 78.0201 279.17 77.5301 279.58C77.0401 279.99 76.8001 280.54 76.8001 281.23C76.8001 281.86 77.0001 282.4 77.4101 282.86C77.8201 283.31 78.5601 283.77 79.6601 284.22C80.6401 283.81 81.3401 283.36 81.7501 282.89C82.1601 282.42 82.3601 281.86 82.3601 281.23C82.3601 280.54 82.1101 279.98 81.6101 279.58C81.1101 279.17 80.4301 278.97 79.5501 278.97V278.96ZM76.3101 289.05C76.3101 289.87 76.6001 290.52 77.1701 290.98C77.7401 291.44 78.5501 291.67 79.5901 291.67C80.6301 291.67 81.4101 291.43 81.9801 290.95C82.5501 290.47 82.8401 289.81 82.8401 288.97C82.8401 288.3 82.5701 287.71 82.0401 287.19C81.5001 286.67 80.5701 286.17 79.2401 285.68C78.2201 286.12 77.4701 286.61 77.0101 287.14C76.5501 287.67 76.3201 288.31 76.3201 289.05H76.3101ZM79.5701 277.57C80.9401 277.57 82.0301 277.89 82.8401 278.53C83.6401 279.17 84.0501 280.05 84.0501 281.18C84.0501 281.92 83.8201 282.6 83.3601 283.21C82.9001 283.82 82.1601 284.38 81.1501 284.88C82.3701 285.46 83.2401 286.08 83.7601 286.72C84.2801 287.36 84.5301 288.11 84.5301 288.95C84.5301 290.2 84.0901 291.2 83.2201 291.94C82.3501 292.69 81.1501 293.06 79.6301 293.06C78.0201 293.06 76.7901 292.71 75.9201 292C75.0501 291.3 74.6201 290.3 74.6201 289.01C74.6201 287.29 75.6701 285.94 77.7701 284.98C76.8201 284.44 76.1401 283.87 75.7301 283.24C75.3201 282.62 75.1101 281.92 75.1101 281.15C75.1101 280.06 75.5101 279.19 76.3201 278.54C77.1301 277.89 78.2101 277.57 79.5601 277.57H79.5701Z" fill="black"/>'+
            '<path d="M88.3999 285.29C88.3999 287.48 88.6599 289.08 89.1699 290.08C89.6899 291.08 90.5099 291.58 91.6299 291.58C92.7499 291.58 93.5999 291.07 94.1099 290.06C94.6199 289.05 94.8799 287.46 94.8799 285.29C94.8799 283.12 94.6199 281.54 94.1099 280.53C93.5999 279.52 92.7699 279.02 91.6299 279.02C90.4899 279.02 89.6799 279.52 89.1699 280.51C88.6499 281.5 88.3999 283.09 88.3999 285.29ZM96.6399 285.29C96.6399 287.89 96.2299 289.84 95.4099 291.12C94.5899 292.4 93.3299 293.05 91.6399 293.05C89.9499 293.05 88.7899 292.39 87.9399 291.08C87.0899 289.76 86.6699 287.84 86.6699 285.29C86.6699 282.74 87.0799 280.72 87.8999 279.45C88.7199 278.18 89.9599 277.54 91.6399 277.54C93.3199 277.54 94.5199 278.2 95.3699 279.53C96.2199 280.86 96.6399 282.78 96.6399 285.29Z" fill="black"/>'+
            '<path d="M109.49 293.05C107.86 293.05 106.59 292.55 105.69 291.54C104.79 290.53 104.35 289.11 104.35 287.27C104.35 285.43 104.8 283.92 105.71 282.89C106.62 281.86 107.92 281.34 109.6 281.34C110.14 281.34 110.68 281.4 111.23 281.52C111.77 281.64 112.2 281.77 112.51 281.93L111.98 283.38C111.6 283.23 111.19 283.1 110.74 283C110.29 282.9 109.9 282.85 109.56 282.85C107.27 282.85 106.12 284.31 106.12 287.24C106.12 288.63 106.4 289.69 106.96 290.44C107.52 291.18 108.35 291.55 109.45 291.55C110.39 291.55 111.36 291.35 112.34 290.94V292.45C111.58 292.84 110.63 293.04 109.49 293.04V293.05Z" fill="black"/>'+
            '<path d="M120.88 291.19L121.2 290.23L121.64 289.01L124.7 281.56H126.87V292.83H125.36V283.51L125.15 284.11L124.55 285.69L121.63 292.84H120.2L117.28 285.67C116.92 284.75 116.67 284.03 116.53 283.52V292.84H115.01V281.57H117.1L120.06 288.73C120.36 289.49 120.63 290.31 120.87 291.19H120.88Z" fill="black"/>'+
            '</svg>';
            //modul  = '<div id = "'+id+'" class = "appended-modul modul C"><div class="name modul-nameAppendC C-name">С</div></div>';
            return modul;
        }
        if ($number == 4){
            modul = '<div id = "'+id+'" class = "appended-modul modul CM"><div class="name modul-nameAppendCM CM-name">СM</div></div>';
            return modul;
        }
        if ($number == 5){
            modul = '<div id = "'+id+'" class = "appended-modul modul CB"><div class="name modul-nameAppendCB CB-name">СБ</div></div>';
            return modul;
        }
        return -1;
    }
    /// добавляем модуль на холст
    $append = function(tar,elem)
    {
        tar.append(elem);
    }
    /// Основная функция
    $moovFunc = function($numberObj,id,e){
        if (e.which == 1){

            // считываем координаты мыши
            $mouseD_x = e.pageX;
            $mouseD_y = e.pageY;
            // считываем координаты блока на который нажали
            $elemCordX = e.currentTarget.getBoundingClientRect().left;
            $elemCordY = e.currentTarget.getBoundingClientRect().top;
            $elemCordXR = e.currentTarget.getBoundingClientRect().right;
            // вычиляем смещение от позиции мыши для генерации нового объекта
            $deltaX = $mouseD_x-$elemCordX;
            $deltaY = $mouseD_y-$elemCordY;
            $deltaXR = $elemCordXR-$mouseD_x;
            // получаем html код модуля
            $moovObj = $creatModul(id,$numberObj);
            // добавляем на страницу(он скрыт)
            $append($('.canvas-UI'),$moovObj)

            // получаем добавленный модуль
            $moovblModul = $('#'+id);
            $moovblModul.css({
                'cursor': 'grabbing'
            });
            // смещаем его так, чтобы он был ровно поверх модуля но который нажали
            $moovblModul.offset({top: e.pageY-$deltaY, left: e.pageX-$deltaX});
            // отображаем модуль
            $moovblModul.show();
            
            $('body').css({
                'pointer-events':'none'
            });
            $('#container').css({
                'pointer-events':'auto'
            });

            // запускаем логику если мышь начала движение
            $(document).mousemove(function (e) {
                // пока клавиша зажата и мышь движется меняем динамично смещение модуля
                $moovblModul.offset({top: e.pageY-$deltaY, left: e.pageX-$deltaX});
            }).click(function (e) {
                // запускаем логику если кнопка отжата
                // проверяем что размещаемый объект находится в рабочей области
                if(e.pageX + $deltaXR < $updateSize()){                    
                    // вычисляем координаты
                    objAdd = document.getElementById(idObject);
                    topY = objAdd.getBoundingClientRect().top;
                    topX = objAdd.getBoundingClientRect().left;
                    dovnY = topY + $('#'+idObject).height();
                    dovnX = topX + $('#'+idObject).width();

                    // условие создание объекта если на доске ничего нет.
                    if(groupMain.size == 0){
                        // основная логика
                        // добавляем объект высчитывем координаты его углов
                        
                        // добавляем id объекта в коллекцию в качестве ключа и добавляем по ключу координаты вершин объекта
                        groupMain.set(idObject,[topX,topY,dovnX,dovnY]);
                        // добавляем в массив размещенных обхектов id размещенного модуля
                        appendedObj.set(idObject,[topX,topY,dovnX,dovnY]);
                        // генерируем новый id для следующего модуля
                        numberIdObjecy = numberIdObjecy + 1;
                        idObject = "appended-modul" + numberIdObjecy;
                        // открепляем событие на клик от текущего модуля
                        $(this).unbind("click");
                    }
                    // если на доске что-то есть.
                    else{
                        /*ну а теперь самое сложно... наверное :D*/
                        // вычисление расстояний и поиск минимального
                        // основная логика
                        
                        $idFinedObjNew = "appended-modul0";
                        $resultDistanse = 9999;
                        $resultDistanse2 = 9999;
                        $idFinedObj ="appended-modul0"; // храним id ближайшего модуля.

                        $resPos1 = true; // правая грань верхний угол
                        $resPos2 = true; // верхняя грань правый угол
                        $resPos3 = true; //  верхняя грань левый угол
                        $resPos4 = true; //  левая грань верхний угол
                        $resPos5 = true; //   левая грань нижний угол
                        $resPos6 = true; //   нижняя грань левый угол
                        $resPos7 = true; //  нижняя грань правый угол
                        $resPos8 = true; //  правая грань нижний угол

                        // поиск объекта к котором будем клеится
                        for (let key of appendedObj.keys()) {
                            $dist = function(x1,y1,x2,y2){
                                return Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
                            };

                            
                            // нужно добавить проверку, что к объекту можно приклеить и с какой стороны приклеить.

                            // идея 
                            // проверять не только дистанцию до грани но и проверять две позиции стыковки на пересечения в случае стыковки
                            // если будут пересечения, то браковать позицию стыковки. - гуд идея. Меньше памяти, меньше трудоемкость.
                            
                            // взависимоси от стороны высчитывается расстояние до грани.
                            // нужно записать так же с какой стороны клеить.


                            $lCordX = appendedObj.get(key)[0]; // координата левой грани притендента
                            $rCordX = appendedObj.get(key)[2]; // координата правой грани притендента
                            $tCordY = appendedObj.get(key)[1]; // координата верхней грани притендента
                            $bCordY = appendedObj.get(key)[3]; // координата нижней грани притендента

                            //topY - верхняя грань нашего размещаемого объекта
                            //topX - левая грань объекта
                            //dovnY - нижняя грань,
                            //dovnX  - правая грань.

                            /////////////////////////////////////////////////////////

                            // координаты центра перемещаемого объекта,
                            // нам нужны расстояния от центра граней до центра граней
                            $cordCenterMoovObjX = (topX+dovnX)/2;
                            $cordCenterMoovObjY = (topY+dovnY)/2;
                            
                            // координаты центра левой грани
                            $cordCenterMoovObjGrLX = topX;
                            $cordCenterMoovObjGrLY = topY + (dovnY-topY)/2;

                            // координаты центра правой грани перемещаемого объекта
                            $cordCenterMoovObjGrRX = dovnX;
                            $cordCenterMoovObjGrRY = topY + (dovnY-topY)/2;

                            //координаты центра верхней грани
                            $cordCenterMoovObjGrTX = topX + (dovnX-topX)/2;
                            $cordCenterMoovObjGrTY = topY;

                            //координаты центра нижней грани
                            $cordCenterMoovObjGrDX = topX + (dovnX-topX)/2;
                            $cordCenterMoovObjGrDY = dovnY;

                            /////////////////////////////////////////////////////////
                            /////////////////////////////////////////

                            // координаты центра нижней грани
                            $cordCenterDovnGrX = $lCordX+($rCordX-$lCordX)/2;
                            $cordCenterDovnGrY = $bCordY;

                            // координаты центра верхней грани
                            $cordCenterTopGrX = $lCordX+($rCordX-$lCordX)/2;
                            $cordCenterTopGrY = $tCordY;

                            // координаты центра левой грани
                            $cordCenterLeftGrX = $lCordX;
                            $cordCenterLeftGrY = $tCordY+($bCordY-$tCordY)/2;

                            // координаты центра правой грани
                            $cordCenterRightGrX = $rCordX;
                            $cordCenterRightGrY = $tCordY+($bCordY-$tCordY)/2;

                            //////////////////////////////////////////

                            ///////////////////////////////////////////////////////////
                            //// здесь код проверки позиций на разрешение стыковки ////
                            ///////////////////////////////////////////////////////////

                            $pos1 = true; // правая грань верхний угол
                            $pos2 = true; // верхняя грань правый угол
                            $pos3 = true; //  верхняя грань левый угол
                            $pos4 = true; //  левая грань верхний угол
                            $pos5 = true; //   левая грань нижний угол
                            $pos6 = true; //   нижняя грань левый угол
                            $pos7 = true; //  нижняя грань правый угол
                            $pos8 = true; //  правая грань нижний угол

                            // допустим есть объект key(id) и есть список всех объектов, как проврить можно ли стыковать
                            // к верхнему правому углу? минимальное расстояние от правой верхней вершины до
                            // верхней грани остальных обеъктов, у которыйх ось y удалена в право от оси y объекта key(id) должно быть
                            // больше чем ширина объекта idObject. 
                            
                            //////////////////////////////////////////
                            //
                            //      2________1
                            //      |        |
                            //      |        |
                            //      |        |
                            //      |________| 
                            //      3        4
                            //
                            /////////////// переменные которые уже обьявленны и нам потребуются/////////////
                            //                                                                             /
                            //  $lCordX = appendedObj.get(key)[0]; // координата левой грани притендента   /
                            //  $rCordX = appendedObj.get(key)[2]; // координата правой грани притендента  /
                            //  $tCordY = appendedObj.get(key)[1]; // координата верхней грани притендента /
                            //  $bCordY = appendedObj.get(key)[3]; // координата нижней грани притендента  /
                            //                                                                             /
                            ////////////////////////////////////////////////////////////////////////////////
                            // цикл для определения позиций возможной стыковки.
                            for (let id of appendedObj.keys()) {
                                /////////// блок кода для правой грани правой вершины//////////////////////////////
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $tY - $tCordY; // от верхней до верхней
                                $d2 = $bY - $tCordY; // от нижней до верхней
                                $d3 = $lX - $rCordX; // от левой до правой
                                $d4 = $rX - $rCordX; // от правой до правой грани
                                if($d2 > 0 && $d4 > 0){
                                    if(id!=key && $d1 < $('#'+idObject).height() && $d3 < $('#'+idObject).width()){
                                        $pos1 = false;
                                    }
                                }
                                /////////////////////////////////////////////////////////////////////////////////////
                                /////////// блок кода для верхней грани правой вершины//////////////////////////////
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $tCordY-$bY;
                                $d2 = $rCordX-$rX;
                                $d3 = $rCordX-$lX;
                                $d4 = $tCordY-$tY;
                                if($d3 > 0 && $d4 > 0){
                                    if(id!=key && $d2 < $('#'+idObject).width() && $d1 < $('#'+idObject).height()){
                                        $pos2 = false;
                                    }
                                }
                                ////////////////////////////////////////////////////////////////////////////////////
                                /////////// блок кода для верхней грани левой вершины//////////////////////////////
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $tCordY-$bY;
                                $d2 = $lX-$lCordX;
                                $d3 = $lCordX-$rX;
                                $d4 = $tCordY-$tY;
                                if($d3 < 0 && $d4 > 0){
                                    if(id!=key && $d2 < $('#'+idObject).width() && $d1 < $('#'+idObject).height()){
                                        $pos3 = false;
                                    }
                                }
                                ////////////////////////////////////////////////////////////////////////////////////
                                /////////// блок кода для левой грани верхней вершины//////////////////////////////
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $tY - $tCordY; 
                                $d2 = $bY - $tCordY; 
                                $d3 = $lCordX - $rX; 
                                $d4 = $lCordX-$lX;
                                if($d2 > 0 && $d4 > 0){
                                    if(id!=key && $d1 < $('#'+idObject).height() && $d3 < $('#'+idObject).width()){
                                        $pos4 = false;
                                    }
                                }
                                ////////////////////////////////////////////////////////////////////////////////////
                                /////////// блок кода для левой грани нижней вершины//////////////////////////////
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $bY - $bCordY; 
                                $d2 = $bY - $tCordY; 
                                $d3 = $lCordX - $rX; 
                                $d4 = $lCordX-$lX;
                                $d5 = $tY - $bCordY;// расстояние от верхней до нижней границыы
                                if($d4 > 0){
                                    if(id!=key && ($d1 < $('#'+idObject).height() && $d3 < $('#'+idObject).width())||($d5 < 0 && $d3 < $('#'+idObject).width())){
                                        $pos5 = false;
                                    }
                                }
                                ////////////////////////////////////////////////////////////////////////////////////
                                /////////// блок кода для нижней грани левой вершины//////////////////////////////
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $tY-$bCordY;
                                $d2 = $lX-$lCordX;
                                $d3 = $lCordX-$rX;
                                $d5 = $bCordY-$bY;
                                if($d3 < 0 && $d4 <= 0 && $d5 < 0){
                                    if(id!=key && $d2 < $('#'+idObject).width() && $d1 < $('#'+idObject).height()){
                                        $pos6 = false;
                                    }
                                }
                                ////////////////////////////////////////////////////////////////////////////////////
                                /////////// блок кода для нижней грани правой вершины//////////////////////////////
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $tY-$bCordY;
                                $d2 = $rCordX-$rX;
                                $d3 = $rCordX-$lX;
                                $d4 = $tCordY-$tY;
                                $d5 = $bCordY-$bY;
                                if($d3 > 0 && $d4 <= 0 && $d5 < 0){
                                    if(id!=key && $d2 < $('#'+idObject).width() && $d1 < $('#'+idObject).height()){
                                        $pos7 = false;
                                    }
                                }
                                ////////////////////////////////////////////////////////////////////////////////////
                                /////////// блок кода для правой грани нижней вершины//////////////////////////////
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $bCordY - $bY; 
                                $d2 = $bY - $tCordY; 
                                $d3 = $lX - $rCordX;
                                $d4 = $rX - $rCordX; 
                                $d5 = $bCordY - $tY; 
                                if($d4 > 0){
                                    if(id!=key && $d5 > 0 && $d1 < $('#'+idObject).height() && $d3 < $('#'+idObject).width()){
                                        $pos8 = false;
                                    }
                                }
                                ////////////////////////////////////////////////////////////////////////////////////
                            }
                            ///////////////////////////////////////////////////////////
                            ////////////////////// end block //////////////////////////
                            ///////////////////////////////////////////////////////////



                            
                            // дистанция от центра размещаемого до центра нижней грани рассматриваемого размещенного
                            // pos6 или pos7 должны быть true.
                            $dist1 = 99999999;
                            $dist2 = 99999999;
                            $dist3 = 99999999;
                            $dist4 = 99999999;

                            if($pos1 || $pos2 || $pos3 || $pos4 || $pos5 || $pos6 || $pos7 || $pos8){
                                if($pos6 || $pos7){
    
                                    $d1 = $dist($cordCenterMoovObjGrRX,$cordCenterMoovObjGrRY,$cordCenterDovnGrX,$cordCenterDovnGrY);
                                    $d2 = $dist($cordCenterMoovObjGrTX,$cordCenterMoovObjGrTY,$cordCenterDovnGrX,$cordCenterDovnGrY);
                                    $d3 = $dist($cordCenterMoovObjGrLX,$cordCenterMoovObjGrLY,$cordCenterDovnGrX,$cordCenterDovnGrY);
                                    $d4 = $dist($cordCenterMoovObjGrDX,$cordCenterMoovObjGrDY,$cordCenterDovnGrX,$cordCenterDovnGrY);
    
                                    //$dist1 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterDovnGrX,$cordCenterDovnGrY);
                                    $dist1 = Math.min($d1,$d2,$d3,$d4);
                                }
                                // дистанция от центра размещаемого до центра верхней грани рассматриваемого размещенного
                                // pos2 или pos3 должны быть true.
                                if($pos2 || $pos3){
                                    $d1 = $dist($cordCenterMoovObjGrRX,$cordCenterMoovObjGrRY,$cordCenterTopGrX,$cordCenterTopGrY);
                                    $d2 = $dist($cordCenterMoovObjGrTX,$cordCenterMoovObjGrTY,$cordCenterTopGrX,$cordCenterTopGrY);
                                    $d3 = $dist($cordCenterMoovObjGrLX,$cordCenterMoovObjGrLY,$cordCenterTopGrX,$cordCenterTopGrY);
                                    $d4 = $dist($cordCenterMoovObjGrDX,$cordCenterMoovObjGrDY,$cordCenterTopGrX,$cordCenterTopGrY);
                                    
                                    //$dist2 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterTopGrX,$cordCenterTopGrY);
                                    $dist2 = Math.min($d1,$d2,$d3,$d4);
                                }
                                // дистанция от центра размещаемого до центра левой грани рассматриваемого размещенного
                                // pos4 или pos5 должны быть true.
                                if($pos4 || $pos5){
                                    $d1 = $dist($cordCenterMoovObjGrRX,$cordCenterMoovObjGrRY,$cordCenterLeftGrX,$cordCenterLeftGrY);
                                    $d2 = $dist($cordCenterMoovObjGrTX,$cordCenterMoovObjGrTY,$cordCenterLeftGrX,$cordCenterLeftGrY);
                                    $d3 = $dist($cordCenterMoovObjGrLX,$cordCenterMoovObjGrLY,$cordCenterLeftGrX,$cordCenterLeftGrY);
                                    $d4 = $dist($cordCenterMoovObjGrDX,$cordCenterMoovObjGrDY,$cordCenterLeftGrX,$cordCenterLeftGrY);
    
                                    //$dist3 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterLeftGrX ,$cordCenterLeftGrY);
                                    $dist3 = Math.min($d1,$d2,$d3,$d4);
                                }
                                // дистанция от центра размещаемого до центра правой грани рассматриваемого размещенного
                                // pos1 или pos8 должны быть true.
                                if($pos1 || $pos8){
                                    $d1 = $dist($cordCenterMoovObjGrRX,$cordCenterMoovObjGrRY,$cordCenterRightGrX,$cordCenterRightGrY);
                                    $d2 = $dist($cordCenterMoovObjGrTX,$cordCenterMoovObjGrTY,$cordCenterRightGrX,$cordCenterRightGrY);
                                    $d3 = $dist($cordCenterMoovObjGrLX,$cordCenterMoovObjGrLY,$cordCenterRightGrX,$cordCenterRightGrY);
                                    $d4 = $dist($cordCenterMoovObjGrDX,$cordCenterMoovObjGrDY,$cordCenterRightGrX,$cordCenterRightGrY);
                                    //$dist4 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterRightGrX ,$cordCenterRightGrY);
                                    $dist4 = Math.min($d1,$d2,$d3,$d4);
                                }
                            }
                            else{

                                $dist1 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterDovnGrX,$cordCenterDovnGrY);
                                $dist2 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterTopGrX,$cordCenterTopGrY);
                                $dist3 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterLeftGrX ,$cordCenterLeftGrY);
                                $dist4 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterRightGrX ,$cordCenterRightGrY);
                                $distanse2 = Math.min($dist1,$dist2,$dist3,$dist4);
                                if($distanse2 < $resultDistanse2){
                                    $resultDistanse2 = $distanse2; // это для проверки наложения в случае еси подходящих объектов для стыковки нет.
                                    $idFinedObj = key;
                                }
                                continue;
                            }

                            

                            $distanse = Math.min($dist1,$dist2,$dist3,$dist4);
                            
                            // на данном этапе у нас есть информация о истанции до объекта размещения а так же о разрешенных
                            // позициях прикрепления

                            $minDistanse = 30+$dist(topX,topY,$cordCenterMoovObjX,$cordCenterMoovObjY);
                            //console.log($minDistanse,$distanse,key);
                            if($('#'+idObject).hasClass('B')){
                                $minDistanse = 130;
                            }
                            if($('#'+idObject).hasClass('BM')){
                                $minDistanse = 130;
                            }
                            if($('#'+idObject).hasClass('CM')){
                                $minDistanse = 130;
                            }
                            if($('#'+idObject).hasClass('C')){
                                $minDistanse = 130;
                            }
                            if($('#'+idObject).hasClass('CB')){
                                $minDistanse = 130;
                            }
                            //console.log($distanse,$dist1,$dist2,$dist3,$dist4);
                            
                            // проверяем что дистанция подходящая. По умолчанию до переопределения дистанция у нас они не подходящие
                            // соответвенно если все позиции запрещенные мы не должны попасть в этот блок
                            ///console.log($dist1,$dist2,$dist3,$dist4,$distanse2,$idFinedObj);
                            
                            if($distanse < $resultDistanse && $distanse < $minDistanse){
                                $resultDistanse = $distanse;
                                // перезависывем переменные
                                // здесь так же нужно перезаписать глобальные переменные разрешенных позиций клейки для объекта
                                if(appendedObj.size < 1){
                                    $idFinedObjOLD = key;
                                    $idFinedObjNew = key;
                                }
                                else{
                                    $idFinedObjOLD = $idFinedObjNew;
                                    $idFinedObjNew = key;
                                    $resPos1 = $pos1; // правая грань верхний угол
                                    $resPos2 = $pos2; // верхняя грань правый угол
                                    $resPos3 = $pos3; //  верхняя грань левый угол
                                    $resPos4 = $pos4; //  левая грань верхний угол
                                    $resPos5 = $pos5; //   левая грань нижний угол
                                    $resPos6 = $pos6; //   нижняя грань левый угол
                                    $resPos7 = $pos7; //  нижняя грань правый угол
                                    $resPos8 = $pos8; //  правая грань нижний угол
                                }
                            }
                        }

                        // по выходу из цикла нам нужно знать объект к которому клеить и разрешенные позиции клейки
                        // или нужно знать что разрешение стыковки ни с каким объектом не получено
                        // это возможно в случае если в определенном радиусе minDistanse нет объектов с разрешенной позицией клейки
                        // тогда нужно проверить что не происходит наложение по текущему месту разрешения
                        // если наложения нет оставить объект на месте
                        // если наложение есть то не размещать объект.
                        if($resultDistanse < 9999){
                            // "клеим"
                            //element = this;
                            //var rect = element.getBoundingClientRect();
                            //console.log(rect.top, rect.right, rect.bottom, rect.left);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                            
                            // $resPos1 = $pos1; // правая грань верхний угол
                            // $resPos2 = $pos2; // верхняя грань правый угол
                            // $resPos3 = $pos3; //  верхняя грань левый угол
                            // $resPos4 = $pos4; //  левая грань верхний угол
                            // $resPos5 = $pos5; //   левая грань нижний угол
                            // $resPos6 = $pos6; //   нижняя грань левый угол
                            // $resPos7 = $pos7; //  нижняя грань правый угол
                            // $resPos8 = $pos8; //  правая грань нижний угол

                            // мы имеем информацию о разрешенных позициях для клейки
                            //console.log($resPos1,$resPos2,$resPos3,$resPos4,$resPos5,$resPos6,$resPos7,$resPos8,$idFinedObjNew);
                            $updateCord = function(){
                                objAdd = document.getElementById(idObject);
                                topY = objAdd.getBoundingClientRect().top;
                                topX = objAdd.getBoundingClientRect().left;
                                dovnY = topY + $('#'+idObject).height();
                                dovnX = topX + $('#'+idObject).width();
                                groupMain.set(idObject,[topX,topY,dovnX,dovnY]);
                                // добавляем в массив размещенных обхектов id размещенного модуля
                                appendedObj.set(idObject,[topX,topY,dovnX,dovnY]);
                            }


                            element1 = document.getElementById($idFinedObjNew);  
                            var rect1 = element1.getBoundingClientRect(); // объект к которому клеим

                            element2 = element1 = document.getElementById(idObject); 
                            var rect2 = element2.getBoundingClientRect(); // объект который клеим
                            
                            // $distans1Vert  - расстояние от нижней границы обж1 до нижней   границы обж2
                            // $distans2Vert  - расстояние от нижней границы обж1 до верхней  границы обж2
                            // $distans3Vert  - расстояние от верхней границы обж1 до нижней  границы обж2
                            // $distans4Vert  - расстояние от верхней границы обж1 до верхней границы обж2
                            // $attachPosVert - позиция приклеивания по вертикали
                            // ниже происходит вычисление минимально расстояние до всех позиций атача
                            // а нужно считать минимально расстояние только до разрешенной позиции атача
                            // 
                            // 
                            //
                            //
                            ///////////////////////////////////////////////////////////////////////////////////////////////////////////
                            $resultDist1 = 9999;
                            $resultDist2 = 9999;
                            $resultDist3 = 9999;
                            $resultDist4 = 9999;
                            $resultDist5 = 9999;
                            $resultDist6 = 9999;
                            $resultDist7 = 9999;
                            $resultDist8 = 9999;
                            $distanse1Vert = 9999;
                            $distanse1Horisont = 9999;
                            $distanse2Vert = 9999;
                            $distanse2Horisont = 9999;
                            $distanse3Vert = 9999;
                            $distanse3Horisont = 9999;
                            $distanse4Vert = 9999;
                            $distanse4Horisont = 9999;
                            $distanse5Vert = 9999;
                            $distanse5Horisont = 9999;
                            $distanse6Vert = 9999;
                            $distanse6Horisont = 9999;
                            $distanse7Vert = 9999;
                            $distanse7Horisont = 9999;
                            $distanse8Vert = 9999;
                            $distanse8Horisont = 9999;
                            if($resPos1){
                                $distanse1Vert = rect1.top - rect2.top;
                                $distanse1Horisont = rect1.right - rect2.left;
                                $resultDist1 = Math.sqrt($distanse1Vert*$distanse1Vert+$distanse1Horisont*$distanse1Horisont);
                            }
                            if($resPos2){
                                $distanse2Vert = rect1.top - rect2.bottom;
                                $distanse2Horisont = rect1.right - rect2.right;
                                $resultDist2 = Math.sqrt($distanse2Vert*$distanse2Vert+$distanse2Horisont*$distanse2Horisont);
                            }
                            if($resPos3){
                                $distanse3Vert = rect1.top - rect2.bottom;
                                $distanse3Horisont = rect1.left - rect2.left;
                                $resultDist3 = Math.sqrt($distanse3Vert*$distanse3Vert+$distanse3Horisont*$distanse3Horisont);
                            }
                            if($resPos4){
                                $distanse4Vert = rect1.top - rect2.top;
                                $distanse4Horisont = rect1.left - rect2.right;
                                $resultDist4 = Math.sqrt($distanse4Vert*$distanse4Vert+$distanse4Horisont*$distanse4Horisont);
                            }
                            if($resPos5){
                                $distanse5Vert = rect1.bottom - rect2.bottom;
                                $distanse5Horisont = rect1.left  - rect2.right;
                                $resultDist5 = Math.sqrt($distanse5Vert*$distanse5Vert+$distanse5Horisont*$distanse5Horisont);
                            }
                            if($resPos6){
                                $distanse6Vert = rect1.bottom -  rect2.top;
                                $distanse6Horisont =  rect1.left - rect2.left;
                                $resultDist6 = Math.sqrt($distanse6Vert*$distanse6Vert+$distanse6Horisont*$distanse6Horisont);
                            }
                            if($resPos7){
                                $distanse7Vert = rect1.bottom - rect2.top;
                                $distanse7Horisont = rect1.right - rect2.right;
                                $resultDist7 = Math.sqrt($distanse7Vert*$distanse7Vert+$distanse7Horisont*$distanse7Horisont);
                            }
                            if($resPos8){
                                $distanse8Vert = rect1.bottom - rect2.bottom;
                                $distanse8Horisont = rect1.right - rect2.left;
                                $resultDist8 = Math.sqrt($distanse8Vert*$distanse8Vert+$distanse8Horisont*$distanse8Horisont);
                            }
                            $resultDistanse = Math.min($resultDist1,$resultDist2,$resultDist3,$resultDist4,$resultDist5,$resultDist6,$resultDist7,$resultDist8);
                            $resultPos = 0;
                            if($resultDistanse == $resultDist1){
                                $resultPos = 1
                            }
                            if($resultDistanse == $resultDist2){
                                $resultPos = 2
                            }
                            if($resultDistanse == $resultDist3){
                                $resultPos = 3
                            }
                            if($resultDistanse == $resultDist4){
                                $resultPos = 4
                            }
                            if($resultDistanse == $resultDist5){
                                $resultPos = 5
                            }
                            if($resultDistanse == $resultDist6){
                                $resultPos = 6
                            }
                            if($resultDistanse == $resultDist7){
                                $resultPos = 7
                            }
                            if($resultDistanse == $resultDist8){
                                $resultPos = 8
                            }
                            if($resultPos == 1){
                                $('#'+idObject).offset({top: rect1.top, left: rect2.left - (rect2.left-rect1.right)+1});
                                $updateCord();
                            }
                            
                            if($resultPos == 2){
                                $('#'+idObject).offset({top: rect2.top-(rect2.bottom-rect1.top)-1, left: rect1.right-(rect2.right-rect2.left)});
                                $updateCord();
                            }
                            if($resultPos == 3){
                                $('#'+idObject).offset({top: rect2.top-(rect2.bottom-rect1.top)-1, left: rect1.left});
                                $updateCord();
                            }
                            if($resultPos == 4){
                                $('#'+idObject).offset({top: rect2.top+(rect1.top - rect2.top), left: rect2.left+(rect1.left - rect2.right)-1});
                                $updateCord();
                            }
                            if($resultPos == 5){
                                $('#'+idObject).offset({top: rect2.top-(rect2.bottom-rect1.bottom), left: rect2.left+(rect1.left - rect2.right)-1});
                                $updateCord();
                            }
                            if($resultPos == 6){
                                $('#'+idObject).offset({top: rect1.bottom+1, left: rect1.left});
                                $updateCord();
                            }
                            if($resultPos == 7){
                                $('#'+idObject).offset({top: rect1.bottom+1, left: rect1.right-(rect2.right-rect2.left)});
                                $updateCord();
                            }
                            if($resultPos == 8){
                                $('#'+idObject).offset({top: rect2.top+(rect1.bottom - rect2.bottom), left: rect2.left - (rect2.left-rect1.right)+1});
                                $updateCord();
                            }



                            

                            

                            // увеличиваем индекс
                            numberIdObjecy = numberIdObjecy + 1;
                            idObject = "appended-modul" + numberIdObjecy;
                            // открепляем событие на клик от текущего модуля
                            $(this).unbind("click");
                            
                        }
                        else {
                            element3 = document.getElementById(idObject);  
                            var rect3 = element3.getBoundingClientRect(); // объект к которому клеим
                            element4 = document.getElementById($idFinedObj);  
                            var rect4 = element4.getBoundingClientRect(); // объект к которому клеим
                            if((rect3.right < rect4.right && rect4.left < rect3.right) || (rect4.top < rect3.top && rect4.bottom > rect3.top )){
                                $moovblModul.remove();
                                $(this).unbind("click");
                            }
                            else{
                                if((rect4.left < rect3.left && rect4.right > rect3.left) || (rect4.top < rect3.bottom && rect4.bottom > rect3.bottom )){
                                    $moovblModul.remove();
                                    $(this).unbind("click");
                                }
                                else {
                                    // добавляем id объекта в коллекцию в качестве ключа и добавляем по ключу координаты вершин объекта
                                    groupMain.set(idObject,[topX,topY,dovnX,dovnY]);
                                    // добавляем в массив размещенных обхектов id размещенного модуля
                                    appendedObj.set(idObject,[topX,topY,dovnX,dovnY]);
                                    // генерируем новый id для следующего модуля
                                    numberIdObjecy = numberIdObjecy + 1;
                                    idObject = "appended-modul" + numberIdObjecy;
                                    // открепляем событие на клик от текущего модуля
                                    $(this).unbind("click");
                                }
                            }
                        }
                    }
                }
                else{
                    $moovblModul.remove();
                    $(this).unbind("click");
                }
                // условия создания объекта если на доске что-то есть.
                $(this).unbind("mousemove");
            });
        };
    };





    $(".B").mousedown(function(e){
        $moovFunc(1,idObject,e);
    });
    $(".BM").mousedown(function(e){
        $moovFunc(2,idObject,e);
    });
    $(".C").mousedown(function(e){
        $moovFunc(3,idObject,e);
    });
    $(".CM").mousedown(function(e){
        $moovFunc(4,idObject,e);
    });
    $(".CB").mousedown(function(e){
        $moovFunc(5,idObject,e);
    });
    selectObj = 0;
    $( '.canvas-UI' ).on( 'click', function( event1 ) {
        obj2 = event1.target;
        idObj2 = $(obj2).attr('id');
        if(idObj2 != 'container'){
            if(!idObj2){
                // блок кода если кликнули по имени блока
                // нужно получить сам модуль
                idObj2 = $(obj2).parent().attr('id');
                if(selectObj != 0){
                    $(selectObj).css({
                        'border-color':'#2C2C2C'
                    });
                    selectObj = document.getElementById(idObj2);
                }
                else{
                    selectObj = document.getElementById(idObj2);
                }
            }
            else{
                if(selectObj != 0){
                    
                    $(selectObj).css({
                        'border-color':'#2C2C2C'
                    });
                    selectObj = document.getElementById(idObj2);
                }
                else{
                    selectObj = document.getElementById(idObj2);
                }
            }
            $(selectObj).css({
                'border-color':'green'
            });
        }
    });
    $( '.canvas-UI' ).on( 'mousedown', function( event1 ) {
        obj = event1.target;
        //console.log(obj)
        classObj =$(obj).attr('class');
        if(classObj == "RotAndDel-Del" || $(obj).parent().parent().hasClass("RotAndDel-Del")){
            if($(selectObj).hasClass('appended-modul')){
                if (event1.which == 1 && selectObj!=0){
                    idObj = $(selectObj).attr('id');
                    appendedObj.delete(idObj);
                    if(groupMain.has(idObj)){
                        groupMain.delete(idObj);
                    }
                    $(selectObj).remove();
                }
            }
        }
        else{
            if(!$(obj).hasClass("appended-modul")){
                $moovObj = $(obj).parent().parent();
                //console.log($moovObj);
                idObj = $moovObj.attr('id');
                obj = document.getElementById(idObj);
            }
            idObj = $(obj).attr('id');
            //console.log(idObj);
            if(!idObj){
                // блок кода если кликнули по имени блока
                // нужно получить сам модуль
                idObj = $(event1.target).parent().attr('id');
                obj = document.getElementById(idObj);
                console.log(obj);
            }
            if(!idObj){
                // блок кода если кликнули по имени блока
                // нужно получить сам модуль
                idObj = $(event1.target).parent().parent().attr('id');
                obj = document.getElementById(idObj);
                console.log(obj);
            }
            // if($(obj).hasClass('name')){
            //     obj = $(event1.Target).parent();
            //     console.log(obj);
            //     idObj = $(event1.Target).parent().attr('id');
            // }
            
            if (event1.which == 1 && idObj != "container" ){
                // считываем координаты мыши
                $mouseD_x = event1.pageX;
                $mouseD_y = event1.pageY;
                // считываем координаты блока на который нажали
                $elemCordX = obj.getBoundingClientRect().left;
                $elemCordY = obj.getBoundingClientRect().top;
                $elemCordXR = obj.getBoundingClientRect().right;
                // вычиляем смещение от позиции мыши для генерации нового объекта
                $deltaX = $mouseD_x-$elemCordX;
                $deltaY = $mouseD_y-$elemCordY;
                $deltaXR = $elemCordXR-$mouseD_x;
                $moovblModul = $('#'+idObj);
                $(document).mousemove(function (e) {
                    $('#'+idObj).css({
                        'z-index':'9999'
                    });
                    $moovblModul.offset({top: e.pageY-$deltaY, left: e.pageX-$deltaX});
                    topY = obj.getBoundingClientRect().top;
                    topX = obj.getBoundingClientRect().left;
                    dovnY = topY + $('#'+idObj).height();
                    dovnX = topX + $('#'+idObj).width();
                    groupMain.set(idObj,[topX,topY,dovnX,dovnY]);
                    // добавляем в массив размещенных обхектов id размещенного модуля
                    appendedObj.set(idObj,[topX,topY,dovnX,dovnY]);
                }).click(function (e) {
                    topY = obj.getBoundingClientRect().top;
                    topX = obj.getBoundingClientRect().left;
                    dovnY = topY + $('#'+idObj).height();
                    dovnX = topX + $('#'+idObj).width();
                    if(appendedObj.size == 1){
                        $(this).unbind("click");
                        $(this).unbind("mousemove");
                    }
                    else{
                        $idFinedObjNew = "appended-modul0";
                        $resultDistanse = 9999;
                        $resultDistanse2 = 9999;
                        $idFinedObj ="appended-modul0"; // храним id ближайшего модуля.

                        $resPos1 = true; // правая грань верхний угол
                        $resPos2 = true; // верхняя грань правый угол
                        $resPos3 = true; //  верхняя грань левый угол
                        $resPos4 = true; //  левая грань верхний угол
                        $resPos5 = true; //   левая грань нижний угол
                        $resPos6 = true; //   нижняя грань левый угол
                        $resPos7 = true; //  нижняя грань правый угол
                        $resPos8 = true; //  правая грань нижний угол

                        for (let key of appendedObj.keys()) {
                            if(key == idObj) {
                                continue;
                            }
                            $dist = function(x1,y1,x2,y2){
                                return Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
                            };
                            $lCordX = appendedObj.get(key)[0]; // координата левой грани притендента
                            $rCordX = appendedObj.get(key)[2]; // координата правой грани притендента
                            $tCordY = appendedObj.get(key)[1]; // координата верхней грани притендента
                            $bCordY = appendedObj.get(key)[3];
                            /////////////////////////////////////////////////////////

                            // координаты центра перемещаемого объекта,
                            // нам нужны расстояния от центра граней до центра граней
                            $cordCenterMoovObjX = (topX+dovnX)/2;
                            $cordCenterMoovObjY = (topY+dovnY)/2;
                            
                            // координаты центра левой грани
                            $cordCenterMoovObjGrLX = topX;
                            $cordCenterMoovObjGrLY = topY + (dovnY-topY)/2;

                            // координаты центра правой грани перемещаемого объекта
                            $cordCenterMoovObjGrRX = dovnX;
                            $cordCenterMoovObjGrRY = topY + (dovnY-topY)/2;

                            //координаты центра верхней грани
                            $cordCenterMoovObjGrTX = topX + (dovnX-topX)/2;
                            $cordCenterMoovObjGrTY = topY;

                            //координаты центра нижней грани
                            $cordCenterMoovObjGrDX = topX + (dovnX-topX)/2;
                            $cordCenterMoovObjGrDY = dovnY;

                            /////////////////////////////////////////////////////////
                            // координаты центра нижней грани
                            $cordCenterDovnGrX = $lCordX+($rCordX-$lCordX)/2;
                            $cordCenterDovnGrY = $bCordY;

                            // координаты центра верхней грани
                            $cordCenterTopGrX = $lCordX+($rCordX-$lCordX)/2;
                            $cordCenterTopGrY = $tCordY;

                            // координаты центра левой грани
                            $cordCenterLeftGrX = $lCordX;
                            $cordCenterLeftGrY = $tCordY+($bCordY-$tCordY)/2;

                            // координаты центра правой грани
                            $cordCenterRightGrX = $rCordX;
                            $cordCenterRightGrY = $tCordY+($bCordY-$tCordY)/2;

                            $pos1 = true; // правая грань верхний угол
                            $pos2 = true; // верхняя грань правый угол
                            $pos3 = true; //  верхняя грань левый угол
                            $pos4 = true; //  левая грань верхний угол
                            $pos5 = true; //   левая грань нижний угол
                            $pos6 = true; //   нижняя грань левый угол
                            $pos7 = true; //  нижняя грань правый угол
                            $pos8 = true; //  правая грань нижний угол
                            for (let id of appendedObj.keys()) {
                                if(idObj == id) {
                                    continue;
                                }
                                /////////// блок кода для правой грани правой вершины//////////////////////////////
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $tY - $tCordY; // от верхней до верхней
                                $d2 = $bY - $tCordY; // от нижней до верхней
                                $d3 = $lX - $rCordX; // от левой до правой
                                $d4 = $rX - $rCordX;
                                if($d2 > 0 && $d4 > 0){
                                    if(id!=key && $d1 < $('#'+idObj).height() && $d3 < $('#'+idObj).width()){
                                        $pos1 = false;
                                    }
                                }
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $tCordY-$bY;
                                $d2 = $rCordX-$rX;
                                $d3 = $rCordX-$lX;
                                $d4 = $tCordY-$tY;
                                if($d3 > 0 && $d4 > 0){
                                    if(id!=key && $d2 < $('#'+idObj).width() && $d1 < $('#'+idObj).height()){
                                        $pos2 = false;
                                    }
                                }
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $tCordY-$bY;
                                $d2 = $lX-$lCordX;
                                $d3 = $lCordX-$rX;
                                $d4 = $tCordY-$tY;
                                if($d3 < 0 && $d4 > 0){
                                    if(id!=key && $d2 < $('#'+idObj).width() && $d1 < $('#'+idObj).height()){
                                        $pos3 = false;
                                    }
                                }

                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $tY - $tCordY; 
                                $d2 = $bY - $tCordY; 
                                $d3 = $lCordX - $rX; 
                                $d4 = $lCordX-$lX;
                                if($d2 > 0 && $d4 > 0){
                                    if(id!=key && $d1 < $('#'+idObj).height() && $d3 < $('#'+idObj).width()){
                                        $pos4 = false;
                                    }
                                }
                                ////////////////////////////////////////////////////////////////////////////////////
                                /////////// блок кода для левой грани нижней вершины//////////////////////////////
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $bY - $bCordY;
                                $d2 = $bY - $tCordY; 
                                $d3 = $lCordX - $rX; 
                                $d4 = $lCordX-$lX;
                                $d5 = $tY - $bCordY;
                                if($d4 > 0){
                                    if(id!=key && ($d1 < $('#'+idObj).height() && $d3 < $('#'+idObj).width())||($d5 < 0 && $d3 < $('#'+idObj).width())){
                                        $pos5 = false;
                                    }
                                }
                                ////////////////////////////////////////////////////////////////////////////////////
                                /////////// блок кода для нижней грани левой вершины//////////////////////////////
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $tY-$bCordY;
                                $d2 = $lX-$lCordX;
                                $d3 = $lCordX-$rX;
                                $d4 = $tCordY-$tY;
                                $d5 = $bCordY-$bY;
                                if($d3 < 0 && $d4 <= 0 && $d5 < 0){
                                    if(id!=key && $d2 < $('#'+idObj).width() && $d1 < $('#'+idObj).height()){
                                        console.log(key,id,$d2,$d1)
                                        $pos6 = false;
                                    }
                                }
                                ////////////////////////////////////////////////////////////////////////////////////
                                /////////// блок кода для нижней грани правой вершины//////////////////////////////
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $tY-$bCordY; // верхння грань для стыковки должна быть ниже
                                $d2 = $rCordX-$rX;
                                $d3 = $rCordX-$lX;
                                $d4 = $tCordY-$tY;
                                $d5 = $bCordY-$bY;
                                if($d3 > 0 && $d4 <= 0 && $d5 < 0){
                                    if(id!=key && $d2 < $('#'+idObj).width() && $d1 < $('#'+idObj).height()){
                                        $pos7 = false;
                                    }
                                }
                                //if($d1 < 0 && $d2 < $('#'+idObj).width())
                                ////////////////////////////////////////////////////////////////////////////////////
                                /////////// блок кода для правой грани нижней вершины//////////////////////////////
                                $lX = appendedObj.get(id)[0];
                                $rX = appendedObj.get(id)[2];
                                $tY = appendedObj.get(id)[1];
                                $bY = appendedObj.get(id)[3];

                                $d1 = $bCordY - $bY; 
                                $d2 = $bY - $tCordY; 
                                $d3 = $lX - $rCordX;
                                $d4 = $rX - $rCordX; 
                                $d5 = $bCordY - $tY; 
                                if($d4 > 0){
                                    if(id!=key && $d5 > 0 && $d1 < $('#'+idObj).height() && $d3 < $('#'+idObj).width()){
                                        $pos8 = false;
                                    }
                                }
                                
                            }
                            $dist1 = 99999999;
                            $dist2 = 99999999;
                            $dist3 = 99999999;
                            $dist4 = 99999999;
                            // переделываем поиск дистанций, от центра граней до центра граней
                            // пока как работает, смотри дистанцию от точки центр
                            if($pos1 || $pos2 || $pos3 || $pos4 || $pos5 || $pos6 || $pos7 || $pos8){
                                if($pos6 || $pos7){

                                    $d1 = $dist($cordCenterMoovObjGrRX,$cordCenterMoovObjGrRY,$cordCenterDovnGrX,$cordCenterDovnGrY);
                                    $d2 = $dist($cordCenterMoovObjGrTX,$cordCenterMoovObjGrTY,$cordCenterDovnGrX,$cordCenterDovnGrY);
                                    $d3 = $dist($cordCenterMoovObjGrLX,$cordCenterMoovObjGrLY,$cordCenterDovnGrX,$cordCenterDovnGrY);
                                    $d4 = $dist($cordCenterMoovObjGrDX,$cordCenterMoovObjGrDY,$cordCenterDovnGrX,$cordCenterDovnGrY);

                                    //$dist1 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterDovnGrX,$cordCenterDovnGrY);
                                    $dist1 = Math.min($d1,$d2,$d3,$d4);
                                }
                                // дистанция от центра размещаемого до центра верхней грани рассматриваемого размещенного
                                // pos2 или pos3 должны быть true.
                                if($pos2 || $pos3){
                                    $d1 = $dist($cordCenterMoovObjGrRX,$cordCenterMoovObjGrRY,$cordCenterTopGrX,$cordCenterTopGrY);
                                    $d2 = $dist($cordCenterMoovObjGrTX,$cordCenterMoovObjGrTY,$cordCenterTopGrX,$cordCenterTopGrY);
                                    $d3 = $dist($cordCenterMoovObjGrLX,$cordCenterMoovObjGrLY,$cordCenterTopGrX,$cordCenterTopGrY);
                                    $d4 = $dist($cordCenterMoovObjGrDX,$cordCenterMoovObjGrDY,$cordCenterTopGrX,$cordCenterTopGrY);
                                    
                                    //$dist2 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterTopGrX,$cordCenterTopGrY);
                                    $dist2 = Math.min($d1,$d2,$d3,$d4);
                                }
                                // дистанция от центра размещаемого до центра левой грани рассматриваемого размещенного
                                // pos4 или pos5 должны быть true.
                                if($pos4 || $pos5){
                                    $d1 = $dist($cordCenterMoovObjGrRX,$cordCenterMoovObjGrRY,$cordCenterLeftGrX,$cordCenterLeftGrY);
                                    $d2 = $dist($cordCenterMoovObjGrTX,$cordCenterMoovObjGrTY,$cordCenterLeftGrX,$cordCenterLeftGrY);
                                    $d3 = $dist($cordCenterMoovObjGrLX,$cordCenterMoovObjGrLY,$cordCenterLeftGrX,$cordCenterLeftGrY);
                                    $d4 = $dist($cordCenterMoovObjGrDX,$cordCenterMoovObjGrDY,$cordCenterLeftGrX,$cordCenterLeftGrY);

                                    //$dist3 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterLeftGrX ,$cordCenterLeftGrY);
                                    $dist3 = Math.min($d1,$d2,$d3,$d4);
                                }
                                // дистанция от центра размещаемого до центра правой грани рассматриваемого размещенного
                                // pos1 или pos8 должны быть true.
                                if($pos1 || $pos8){
                                    $d1 = $dist($cordCenterMoovObjGrRX,$cordCenterMoovObjGrRY,$cordCenterRightGrX,$cordCenterRightGrY);
                                    $d2 = $dist($cordCenterMoovObjGrTX,$cordCenterMoovObjGrTY,$cordCenterRightGrX,$cordCenterRightGrY);
                                    $d3 = $dist($cordCenterMoovObjGrLX,$cordCenterMoovObjGrLY,$cordCenterRightGrX,$cordCenterRightGrY);
                                    $d4 = $dist($cordCenterMoovObjGrDX,$cordCenterMoovObjGrDY,$cordCenterRightGrX,$cordCenterRightGrY);
                                    //$dist4 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterRightGrX ,$cordCenterRightGrY);
                                    $dist4 = Math.min($d1,$d2,$d3,$d4);
                                }
                            }
                            else{
                                $dist1 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterDovnGrX,$cordCenterDovnGrY);
                                $dist2 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterTopGrX,$cordCenterTopGrY);
                                $dist3 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterLeftGrX ,$cordCenterLeftGrY);
                                $dist4 = $dist($cordCenterMoovObjX,$cordCenterMoovObjY,$cordCenterRightGrX ,$cordCenterRightGrY);
                                $distanse2 = Math.min($dist1,$dist2,$dist3,$dist4);
                                if($distanse2 < $resultDistanse2){
                                    $resultDistanse2 = $distanse2; // это для проверки наложения в случае еси подходящих объектов для стыковки нет.
                                    $idFinedObj = key;
                                }
                                continue;
                            }
                            $distanse = Math.min($dist1,$dist2,$dist3,$dist4);
                            $minDistanse = 30+$dist(topX,topY,$cordCenterMoovObjX,$cordCenterMoovObjY);
                            //console.log($minDistanse,$distanse,key);
                            if($('#'+idObj).hasClass('B')){
                                $minDistanse = 90;
                            }
                            if($('#'+idObj).hasClass('BM')){
                                $minDistanse = 90;
                            }
                            if($('#'+idObj).hasClass('CM')){
                                $minDistanse = 90;
                            }
                            if($('#'+idObj).hasClass('C')){
                                $minDistanse = 90;
                            }
                            if($('#'+idObj).hasClass('CB')){
                                $minDistanse = 90;
                            }
                            //console.log(key,$pos1,$pos2,$pos3,$pos4,$pos5,$pos6,$pos7,$pos8);
                            if($distanse < $resultDistanse && $distanse < $minDistanse){
                                $resultDistanse = $distanse;
                                // перезависывем переменные
                                // здесь так же нужно перезаписать глобальные переменные разрешенных позиций клейки для объекта
                                if(appendedObj.size < 1){
                                    $idFinedObjOLD = key;
                                    $idFinedObjNew = key;
                                }
                                else{
                                    $idFinedObjOLD = $idFinedObjNew;
                                    $idFinedObjNew = key;
                                    $resPos1 = $pos1; // правая грань верхний угол
                                    $resPos2 = $pos2; // верхняя грань правый угол
                                    $resPos3 = $pos3; //  верхняя грань левый угол
                                    $resPos4 = $pos4; //  левая грань верхний угол
                                    $resPos5 = $pos5; //   левая грань нижний угол
                                    $resPos6 = $pos6; //   нижняя грань левый угол
                                    $resPos7 = $pos7; //  нижняя грань правый угол
                                    $resPos8 = $pos8; //  правая грань нижний угол
                                    
                                }
                            }
                        }
                        if($resultDistanse < 9999){
                            $updateCord = function(){
                                objAdd = document.getElementById(idObj);
                                topY = objAdd.getBoundingClientRect().top;
                                topX = objAdd.getBoundingClientRect().left;
                                dovnY = topY + $('#'+idObj).height();
                                dovnX = topX + $('#'+idObj).width();
                                groupMain.set(idObj,[topX,topY,dovnX,dovnY]);
                                // добавляем в массив размещенных обхектов id размещенного модуля
                                appendedObj.set(idObj,[topX,topY,dovnX,dovnY]);
                            }
                            element1 = document.getElementById($idFinedObjNew);  
                            var rect1 = element1.getBoundingClientRect(); // объект к которому клеим

                            element2 = element1 = document.getElementById(idObj); 
                            var rect2 = element2.getBoundingClientRect(); // объект который клеим
                            //console.log($idFinedObjNew);
                            $resultDist1 = 9999;
                            $resultDist2 = 9999;
                            $resultDist3 = 9999;
                            $resultDist4 = 9999;
                            $resultDist5 = 9999;
                            $resultDist6 = 9999;
                            $resultDist7 = 9999;
                            $resultDist8 = 9999;
                            $distanse1Vert = 9999;
                            $distanse1Horisont = 9999;
                            $distanse2Vert = 9999;
                            $distanse2Horisont = 9999;
                            $distanse3Vert = 9999;
                            $distanse3Horisont = 9999;
                            $distanse4Vert = 9999;
                            $distanse4Horisont = 9999;
                            $distanse5Vert = 9999;
                            $distanse5Horisont = 9999;
                            $distanse6Vert = 9999;
                            $distanse6Horisont = 9999;
                            $distanse7Vert = 9999;
                            $distanse7Horisont = 9999;
                            $distanse8Vert = 9999;
                            $distanse8Horisont = 9999;
                            if($resPos1){
                                $distanse1Vert = rect1.top - rect2.top;
                                $distanse1Horisont = rect1.right - rect2.left;
                                $resultDist1 = Math.sqrt($distanse1Vert*$distanse1Vert+$distanse1Horisont*$distanse1Horisont);
                            }
                            if($resPos2){
                                $distanse2Vert = rect1.top - rect2.bottom;
                                $distanse2Horisont = rect1.right - rect2.right;
                                $resultDist2 = Math.sqrt($distanse2Vert*$distanse2Vert+$distanse2Horisont*$distanse2Horisont);
                            }
                            if($resPos3){
                                $distanse3Vert = rect1.top - rect2.bottom;
                                $distanse3Horisont = rect1.left - rect2.left;
                                $resultDist3 = Math.sqrt($distanse3Vert*$distanse3Vert+$distanse3Horisont*$distanse3Horisont);
                            }
                            if($resPos4){
                                $distanse4Vert = rect1.top - rect2.top;
                                $distanse4Horisont = rect1.left - rect2.right;
                                $resultDist4 = Math.sqrt($distanse4Vert*$distanse4Vert+$distanse4Horisont*$distanse4Horisont);
                            }
                            if($resPos5){
                                $distanse5Vert = rect1.bottom - rect2.bottom;
                                $distanse5Horisont = rect1.left  - rect2.right;
                                $resultDist5 = Math.sqrt($distanse5Vert*$distanse5Vert+$distanse5Horisont*$distanse5Horisont);
                            }
                            if($resPos6){
                                $distanse6Vert = rect1.bottom -  rect2.top;
                                $distanse6Horisont =  rect1.left - rect2.left;
                                $resultDist6 = Math.sqrt($distanse6Vert*$distanse6Vert+$distanse6Horisont*$distanse6Horisont);
                            }
                            if($resPos7){
                                $distanse7Vert = rect1.bottom - rect2.top;
                                $distanse7Horisont = rect1.right - rect2.right;
                                $resultDist7 = Math.sqrt($distanse7Vert*$distanse7Vert+$distanse7Horisont*$distanse7Horisont);
                            }
                            if($resPos8){
                                $distanse8Vert = rect1.bottom - rect2.bottom;
                                $distanse8Horisont = rect1.right - rect2.left;
                                $resultDist8 = Math.sqrt($distanse8Vert*$distanse8Vert+$distanse8Horisont*$distanse8Horisont);
                            }
                            $resultDistanse = Math.min($resultDist1,$resultDist2,$resultDist3,$resultDist4,$resultDist5,$resultDist6,$resultDist7,$resultDist8);
                            $resultPos = 0;
                            if($resultDistanse == $resultDist1){
                                $resultPos = 1
                            }
                            if($resultDistanse == $resultDist2){
                                $resultPos = 2
                            }
                            if($resultDistanse == $resultDist3){
                                $resultPos = 3
                            }
                            if($resultDistanse == $resultDist4){
                                $resultPos = 4
                            }
                            if($resultDistanse == $resultDist5){
                                $resultPos = 5
                            }
                            if($resultDistanse == $resultDist6){
                                $resultPos = 6
                            }
                            if($resultDistanse == $resultDist7){
                                $resultPos = 7
                            }
                            if($resultDistanse == $resultDist8){
                                $resultPos = 8
                            }
                            if($resultPos == 1){
                                $('#'+idObj).offset({top: rect1.top, left: rect2.left - (rect2.left-rect1.right)+1});
                                $updateCord();
                            }
                            
                            if($resultPos == 2){
                                $('#'+idObj).offset({top: rect2.top-(rect2.bottom-rect1.top)-1, left: rect1.right-(rect2.right-rect2.left)});
                                $updateCord();
                            }
                            if($resultPos == 3){
                                $('#'+idObj).offset({top: rect2.top-(rect2.bottom-rect1.top)-1, left: rect1.left});
                                $updateCord();
                            }
                            if($resultPos == 4){
                                $('#'+idObj).offset({top: rect2.top+(rect1.top - rect2.top), left: rect2.left+(rect1.left - rect2.right)-1});
                                $updateCord();
                            }
                            if($resultPos == 5){
                                $('#'+idObj).offset({top: rect2.top-(rect2.bottom-rect1.bottom), left: rect2.left+(rect1.left - rect2.right)-1});
                                $updateCord();
                            }
                            if($resultPos == 6){
                                $('#'+idObj).offset({top: rect1.bottom+1, left: rect1.left});
                                $updateCord();
                            }
                            if($resultPos == 7){
                                $('#'+idObj).offset({top: rect1.bottom+1, left: rect1.right-(rect2.right-rect2.left)});
                                $updateCord();
                            }
                            if($resultPos == 8){
                                $('#'+idObj).offset({top: rect2.top+(rect1.bottom - rect2.bottom), left: rect2.left - (rect2.left-rect1.right)+1});
                                $updateCord();
                            }
                            $(this).unbind("click");
                            $(this).unbind("mousemove");
                        }
                        else {
                            var rect3 = obj.getBoundingClientRect(); // объект к которому клеим
                            element4 = document.getElementById($idFinedObj);
                            var rect4 = element4.getBoundingClientRect(); // объект к которому клеим
                            // if((rect3.right < rect4.right && rect4.left < rect3.right) || (rect4.top < rect3.top && rect4.bottom > rect3.top )){
                            //     appendedObj.delete(idObj);
                            //     console.log(3);
                            //     $(obj).remove();
                            //     $(this).unbind("click");
                            //     $(this).unbind("mousemove");
                            // }
                            // else{
                                // if((rect4.left < rect3.left && rect4.right > rect3.left) || (rect4.top < rect3.bottom && rect4.bottom > rect3.bottom )){
                                //     appendedObj.delete(idObj);
                                //     console.log(2);
                                //     $(this).unbind("mousemove");
                                //     $(this).unbind("click");

                                //     $(obj).remove();
                                // }
                                // else {
                                // открепляем событие на клик от текущего модуля
                                $(this).unbind("mousemove");
                                $(this).unbind("click");
                                //}
                          
                                //}
                        }
                        $('#'+idObj).css({
                            'z-index':'999'
                        });
                        $(this).unbind("mousemove");
                        $(this).unbind("click");
                    }// end block add
                    $(this).unbind("mousemove");
                    $(this).unbind("click");
                });
            }
        }
    });
});